creating a new Workspace:
       ng new app-name --create-application=false
generate an application:
        ng generate application app-name --standalone=false
Components:
       ng generate component component-name 
 --it will create a folder with component name and .ts,.html,.css and .spc.ts files will generated
Flow/architecture:
angular.js---->main.js--->app-module-->components(selectors)--index.html

Data Binding:
HTML---->Template
.ts----->Component
Data Binding transfering data from component to template or template to component or both.
Data bindings are two types in angular
1. one way:
     string interpolation: you can transfer the data from component to template, using double curly braces. but remember, template takes always values as strings only in interpolation

//app.component.html
<div class="text">
   <h1>Hello Everyone!</h1>
   <p>My name is {{name}} </p>
   <p>Our course is {{course}}</p>
   <p>{{2+2}}</p>
   <p>{{isGood ? 'Good Boy' : 'Bad Boy'}}
   {{getGreeting()}}
   </p>
   <img src="{{address}}" alt="">
</div>

//app.component.ts
import { Component } from '@angular/core';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrl: './app.component.css',
})
export class AppComponent {
  title:string = 'data-binding1';
  name:string = 'prasad';
  course:string = 'Angular 16 &17';
  address:string =
    'https://images.pexels.com/photos/268533/pexels-photo-268533.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500';
  isGood: boolean = false;
  getGreeting() {
    return "bye!Bye"
  }
}

2. Property Binding : property Binding is also used for transfering data from component to template
it is used usually to assign properties as html attributes
you have to specify properties/attributes with []
[attribute-name]="property-name"
//app.component.html
<div [class.text]="isHeading">
  <h1>My Heading</h1>
</div>
<button [disabled]="isDisabled">Click me</button>
<img src="{{address}}" alt="">







<input type="text" [placeholder]="plchldr">



<p [title]="text">{{text}}</p>

  
 

